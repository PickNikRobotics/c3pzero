###############################################################
#
#  This configures the robot to work with moveit studio
#
###############################################################

hardware:
  # Used by the ur_description package to set kinematics and geometry for a specific robot type.
  simulated: True

  # The robot's IP address
  ip: "!!! Please set the IP address of the robot"

  # launch files
  hardware_launch_file:
    package: "c3pzero_base_config"
    path: "launch/hardware.launch.py"

  robot_driver_persist_launch_file:
    package: "c3pzero_description"
    path: "launch/view_robot_base.launch.py"

  robot_driver_restart_launch_file:
    package: "c3pzero_description"
    path: "launch/view_robot_base.launch.py"

  simulated_hardware_launch_file:
    package: "c3pzero_base_config"
    path: "launch/hardware.launch.py"

  simulated_robot_driver_persist_launch_file:
    package: "c3pzero_description"
    path: "launch/view_robot_base.launch.py"

  simulated_robot_driver_restart_launch_file:
    package: "c3pzero_description"
    path: "launch/view_robot_base.launch.py"

  camera_config_file:
    package: "c3pzero_base_config"
    path: "config/cameras.yaml"

  # Parameters used to configure the robot description through XACRO
  robot_description:
    urdf:
      package: "c3pzero_description"
      path: "urdf/c3pzero_base.xacro"
    srdf:
      package: "picknik_kinova_gen3_base_config"
      path: "config/moveit/picknik_kinova_gen3_base.srdf"
    urdf_params:
      - simulation: True

ros_global_params:
  use_sim_time: "%>> hardware.simulated"

# This Configures moveit params that are in moveit_config.py
moveit_params:
  joint_group_name: "manipulator"

  ompl_planning:
    package: "c3pzero_base_config"
    path: "config/moveit/ompl_planning.yaml"
  kinematics:
    package: "c3pzero_base_config"
    path: "config/moveit/kinematics.yaml"
  servo:
    package: "c3pzero_base_config"
    path: "config/moveit/kinova_gen3_servo.yaml"
  sensors_3d:
    package: "c3pzero_base_config"
    path: "config/moveit/sensors_3d.yaml"

  publish:
    planning_scene: True
    geometry_updates: True
    state_updates: True
    transforms_updates: True

  trajectory_execution:
    manage_controllers: True
    allowed_execution_duration_scaling: 2.0
    allowed_goal_duration_margin: 5.0
    allowed_start_tolerance: 0.01

optional_feature_params:
  use_joystick: False
  use_external_webcam: False
  use_formant_bridge: False

ros2_control:
  config:
    package: "picknik_kinova_gen3_base_config"
    path: "config/control/picknik_kinova_gen3.ros2_control.yaml"
  # Load and start these controllers so they can be used immediately.
  controllers_active_at_startup:
    - "robotiq_gripper_controller"
    - "joint_state_broadcaster"
    - "joint_trajectory_controller"
  # TODO: Need the ability to enable empty list of inactive controllers at startup
  # Load but do not start these controllers so they can be activated later if needed.
  controllers_inactive_at_startup:
    - "streaming_controller" # this controller is currently not able to run at the same time as joint_trajectory_controller and is currently disabled in picknik_kinova_gen3.ros2_control.yaml
  # Prevent the Agent's controller pause functionality from stopping these controllers.
  controllers_not_managed:
    - "joint_state_broadcaster"

# Octomap manager configuration parameters
octomap_manager:
  # Input point cloud topic name. The *output* point cloud topic published by
  # the Octomap manager node is defined in sensors_3d.yaml.
  input_point_cloud_topic: "/wrist_mounted_camera/depth/color/points"

objectives:
  behavior_loader_plugins:
    core:
      - "moveit_studio::behaviors::CoreBehaviorsLoader"
    nav:
      - "c3pzero_behaviors::C3PzeroBehaviorsBehaviorsLoader"
  objective_library_paths:
    core:
      package_name: "c3pzero_base_config"
      relative_path: "objectives"
  waypoints_file:
    package_name: "c3pzero_base_config"
    relative_path: "waypoints/waypoints.yaml"
